{"version":3,"sources":["accordeon.js","dinam-adap.js","main-slider.js","main.js","nav.js","reviews.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACflfile":"main.min.js","sourcesContent":["// // accordeon\r\n// document.addEventListener(\"DOMContentLoaded\", () => {\r\n//   const accordeons = document.querySelectorAll(\".accordeon__item\");\r\n\r\n//   accordeons.forEach((el) => {\r\n//     el.addEventListener(\"click\", (e) => {\r\n//       const self = e.currentTarget;\r\n//       const title = self.querySelector(\".accordeon__name\");\r\n//       const content = self.querySelector(\".accordeon__decription\");\r\n\r\n//       self.classList.toggle(\"active\");\r\n//     });\r\n//   });\r\n// });\r\n// // ----- END\r\n","// // Dynamic Adapt v.1\r\n// // HTML data-da=\"where(uniq class name),when(breakpoint),position(digi)\"\r\n// // e.x. data-da=\".item,992,2\"\r\n// // Andrikanych Yevhen 2020\r\n// // https://www.youtube.com/c/freelancerlifestyle\r\n\r\n// \"use strict\";\r\n\r\n// function DynamicAdapt(type) {\r\n//   this.type = type;\r\n// }\r\n\r\n// DynamicAdapt.prototype.init = function () {\r\n//   const _this = this;\r\n//   // массив объектов\r\n//   this.оbjects = [];\r\n//   this.daClassname = \"_dynamic_adapt_\";\r\n//   // массив DOM-элементов\r\n//   this.nodes = document.querySelectorAll(\"[data-da]\");\r\n\r\n//   // наполнение оbjects объктами\r\n//   for (let i = 0; i < this.nodes.length; i++) {\r\n//     const node = this.nodes[i];\r\n//     const data = node.dataset.da.trim();\r\n//     const dataArray = data.split(\",\");\r\n//     const оbject = {};\r\n//     оbject.element = node;\r\n//     оbject.parent = node.parentNode;\r\n//     оbject.destination = document.querySelector(dataArray[0].trim());\r\n//     оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\r\n//     оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\r\n//     оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n//     this.оbjects.push(оbject);\r\n//   }\r\n\r\n//   this.arraySort(this.оbjects);\r\n\r\n//   // массив уникальных медиа-запросов\r\n//   this.mediaQueries = Array.prototype.map.call(\r\n//     this.оbjects,\r\n//     function (item) {\r\n//       return (\r\n//         \"(\" +\r\n//         this.type +\r\n//         \"-width: \" +\r\n//         item.breakpoint +\r\n//         \"px),\" +\r\n//         item.breakpoint\r\n//       );\r\n//     },\r\n//     this\r\n//   );\r\n//   this.mediaQueries = Array.prototype.filter.call(\r\n//     this.mediaQueries,\r\n//     function (item, index, self) {\r\n//       return Array.prototype.indexOf.call(self, item) === index;\r\n//     }\r\n//   );\r\n\r\n//   // навешивание слушателя на медиа-запрос\r\n//   // и вызов обработчика при первом запуске\r\n//   for (let i = 0; i < this.mediaQueries.length; i++) {\r\n//     const media = this.mediaQueries[i];\r\n//     const mediaSplit = String.prototype.split.call(media, \",\");\r\n//     const matchMedia = window.matchMedia(mediaSplit[0]);\r\n//     const mediaBreakpoint = mediaSplit[1];\r\n\r\n//     // массив объектов с подходящим брейкпоинтом\r\n//     const оbjectsFilter = Array.prototype.filter.call(\r\n//       this.оbjects,\r\n//       function (item) {\r\n//         return item.breakpoint === mediaBreakpoint;\r\n//       }\r\n//     );\r\n//     matchMedia.addListener(function () {\r\n//       _this.mediaHandler(matchMedia, оbjectsFilter);\r\n//     });\r\n//     this.mediaHandler(matchMedia, оbjectsFilter);\r\n//   }\r\n// };\r\n\r\n// DynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\r\n//   if (matchMedia.matches) {\r\n//     for (let i = 0; i < оbjects.length; i++) {\r\n//       const оbject = оbjects[i];\r\n//       оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n//       this.moveTo(оbject.place, оbject.element, оbject.destination);\r\n//     }\r\n//   } else {\r\n//     for (let i = 0; i < оbjects.length; i++) {\r\n//       const оbject = оbjects[i];\r\n//       if (оbject.element.classList.contains(this.daClassname)) {\r\n//         this.moveBack(оbject.parent, оbject.element, оbject.index);\r\n//       }\r\n//     }\r\n//   }\r\n// };\r\n\r\n// // Функция перемещения\r\n// DynamicAdapt.prototype.moveTo = function (place, element, destination) {\r\n//   element.classList.add(this.daClassname);\r\n//   if (place === \"last\" || place >= destination.children.length) {\r\n//     destination.insertAdjacentElement(\"beforeend\", element);\r\n//     return;\r\n//   }\r\n//   if (place === \"first\") {\r\n//     destination.insertAdjacentElement(\"afterbegin\", element);\r\n//     return;\r\n//   }\r\n//   destination.children[place].insertAdjacentElement(\"beforebegin\", element);\r\n// };\r\n\r\n// // Функция возврата\r\n// DynamicAdapt.prototype.moveBack = function (parent, element, index) {\r\n//   element.classList.remove(this.daClassname);\r\n//   if (parent.children[index] !== undefined) {\r\n//     parent.children[index].insertAdjacentElement(\"beforebegin\", element);\r\n//   } else {\r\n//     parent.insertAdjacentElement(\"beforeend\", element);\r\n//   }\r\n// };\r\n\r\n// // Функция получения индекса внутри родителя\r\n// DynamicAdapt.prototype.indexInParent = function (parent, element) {\r\n//   const array = Array.prototype.slice.call(parent.children);\r\n//   return Array.prototype.indexOf.call(array, element);\r\n// };\r\n\r\n// // Функция сортировки массива по breakpoint и place\r\n// // по возрастанию для this.type = min\r\n// // по убыванию для this.type = max\r\n// DynamicAdapt.prototype.arraySort = function (arr) {\r\n//   if (this.type === \"min\") {\r\n//     Array.prototype.sort.call(arr, function (a, b) {\r\n//       if (a.breakpoint === b.breakpoint) {\r\n//         if (a.place === b.place) {\r\n//           return 0;\r\n//         }\r\n\r\n//         if (a.place === \"first\" || b.place === \"last\") {\r\n//           return -1;\r\n//         }\r\n\r\n//         if (a.place === \"last\" || b.place === \"first\") {\r\n//           return 1;\r\n//         }\r\n\r\n//         return a.place - b.place;\r\n//       }\r\n\r\n//       return a.breakpoint - b.breakpoint;\r\n//     });\r\n//   } else {\r\n//     Array.prototype.sort.call(arr, function (a, b) {\r\n//       if (a.breakpoint === b.breakpoint) {\r\n//         if (a.place === b.place) {\r\n//           return 0;\r\n//         }\r\n\r\n//         if (a.place === \"first\" || b.place === \"last\") {\r\n//           return 1;\r\n//         }\r\n\r\n//         if (a.place === \"last\" || b.place === \"first\") {\r\n//           return -1;\r\n//         }\r\n\r\n//         return b.place - a.place;\r\n//       }\r\n\r\n//       return b.breakpoint - a.breakpoint;\r\n//     });\r\n//     return;\r\n//   }\r\n// };\r\n\r\n// const da = new DynamicAdapt(\"max\");\r\n// da.init();\r\n","// // слайдер на главной\r\n// const headerSlider = new Swiper(\".tophead-slider\", {\r\n//   // loop: true,\r\n//   autoplay: {\r\n//     //пауза между прокруткой\r\n//     delay: 3000,\r\n//     //закончить на последнем слайде\r\n//     // stopOnLastSlide: false,\r\n//     //отключить после ручного переключения\r\n//     // disableOnInteraction: false,\r\n//   },\r\n//   //скорость переключения слайдов\r\n//   speed: 800,\r\n//   // навигация по стрелкам\r\n//   navigation: {\r\n//     nextEl: \"main-slider__btn-next\",\r\n//     prevEl: \"main-slider__btn-prev\",\r\n//     // disabledClass: \"stories-button__unactive\",\r\n//     clickable: true,\r\n//     // для ппрвильного направления\r\n//   },\r\n//   // буллеты\r\n//   pagination: {\r\n//     el: \".swiper-pagination\",\r\n//     type: \"bullets\",\r\n//     clickable: true,\r\n//     dynamicBullets: true,\r\n//   },\r\n//   //эффект перехода слайда (только если показ по 1-му слайду)\r\n//   effect: \"fade\",\r\n//   fadeEffect: {\r\n//     crossFade: true,\r\n//   },\r\n//   // показ кол-ва слайдов (работает, когда откл effect: \"fade\")\r\n//   slidesPerView: 3.6,\r\n//   // расстояние между слайдами\r\n//   spaceBetween: 40,\r\n//   //отложенная загрузка:\r\n//   //отключаем презагрузку картинок\r\n//   preloadImages: false,\r\n//   lazy: {\r\n//     loadOnTransitionStart: false,\r\n//     loadPrevNext: false,\r\n//   },\r\n//   // переключение при клике на слайд\r\n//   slideToClickedSlide: true,\r\n//   // отключение прокрутки при наведении мыши\r\n//   on: {\r\n//     init() {\r\n//       this.el.addEventListener(\"mouseenter\", () => {\r\n//         this.autoplay.stop();\r\n//       });\r\n\r\n//       this.el.addEventListener(\"mouseleave\", () => {\r\n//         this.autoplay.start();\r\n//       });\r\n//     },\r\n//   },\r\n//   //\r\n// });\r\n// //----- END\r\n","const switchInput = document.getElementById(\"switch-input\");\nconst mainSwitch = document.querySelector(\".main-block__switch\");\nconst mainContent = document.querySelector(\".main-block__content\");\n\nswitchInput.addEventListener(\"click\", function (e) {\n  if (switchInput.checked) {\n    setTimeout(hideSwitch, 1000);\n    setTimeout(showContent, 900);\n  }\n});\n\nfunction hideSwitch() {\n  mainSwitch.classList.add(\"_hide\");\n}\n\nfunction showContent() {\n  mainContent.classList.add(\"_active\");\n}\n\n// scroll\nconst isInViewport = function (elem) {\n  const distance = elem.getBoundingClientRect();\n  return (\n    distance.top >= 0 &&\n    distance.left >= 0 &&\n    distance.bottom <=\n      (window.innerHeight || document.documentElement.clientHeight) &&\n    distance.right <=\n      (window.innerWidth || document.documentElement.clientWidth)\n  );\n};\n\nconst findMe = document.getElementById(\"advantages__container\");\nlet eventStatus = false;\n\nwindow.addEventListener(\n  \"scroll\",\n  function (e) {\n    if (isInViewport(findMe)) {\n      if (!eventStatus) {\n        // animate count scriprt\n        const dataCounters = document.querySelectorAll(\".advantages__name\");\n        let interval = 1500;\n\n        dataCounters.forEach((item) => {\n          let startValue = 0;\n          let endValue = parseInt(item.getAttribute(\"data-counter\"));\n          let duration = Math.floor(interval / endValue);\n          let counter = setInterval(function () {\n            startValue += 1;\n            item.textContent = startValue;\n            if (startValue == endValue) {\n              clearInterval(counter);\n            }\n          }, duration);\n        });\n        eventStatus = true;\n      }\n    }\n  },\n  false\n);\n","// мобильное меню\r\n\r\n//выпадающее меню для мобильных устройств\r\ndocument.addEventListener(\"click\", documentActions);\r\n\r\nfunction documentActions(e) {\r\n  const targetElement = e.target;\r\n  if (window.innerWidth > 900) {\r\n    if (targetElement.classList.contains(\"menu__arrow\")) {\r\n      targetElement.closest(\".menu__item\").classList.toggle(\"_hover\");\r\n    }\r\n    if (\r\n      !targetElement.closest(\".menu__item\") &&\r\n      document.querySelectorAll(\".menu__item._hover\").length > 0\r\n    ) {\r\n      // console.log(\"ehhh\");\r\n      // _removeClasses(document.querySelectorAll(\".menu__item._hover\"), \"_hover\");\r\n    }\r\n  }\r\n}\r\n\r\n// проверка, является ли уствройство мобильным\r\nconst isMobile = {\r\n  Android: function () {\r\n    return navigator.userAgent.match(/Android/i);\r\n  },\r\n  BlackBerry: function () {\r\n    return navigator.userAgent.match(/BlackBerry/i);\r\n  },\r\n  iOS: function () {\r\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n  },\r\n  Opera: function () {\r\n    return navigator.userAgent.match(/Opera Mini/i);\r\n  },\r\n  Windows: function () {\r\n    return navigator.userAgent.match(/IEMobile/i);\r\n  },\r\n  any: function () {\r\n    return (\r\n      isMobile.Android() ||\r\n      isMobile.BlackBerry() ||\r\n      isMobile.iOS() ||\r\n      isMobile.Opera() ||\r\n      isMobile.Windows()\r\n    );\r\n  },\r\n};\r\n\r\nif (isMobile.any()) {\r\n  // document.querySelector('html').classList.add('_touch');\r\n  document.body.classList.add(\"_touch\");\r\n}\r\n\r\n// меню бургер\r\nconst iconMenu = document.querySelector(\".menu__icon\");\r\nconst menuBody = document.querySelector(\".menu__body\");\r\nconst menuLink = document.querySelectorAll(\".menu__item\");\r\nif (iconMenu) {\r\n  iconMenu.addEventListener(\"click\", function (e) {\r\n    console.log(\"menu\");\r\n    document.body.classList.toggle(\"_lock\");\r\n    iconMenu.classList.toggle(\"_active\");\r\n    menuBody.classList.toggle(\"_active\");\r\n  });\r\n}\r\n// закрытие при клике\r\nmenuLink.forEach((item) => {\r\n  item.addEventListener(\"click\", () => {\r\n    document.body.classList.remove(\"_lock\");\r\n    iconMenu.classList.remove(\"_active\");\r\n    menuBody.classList.remove(\"_active\");\r\n  });\r\n});\r\n","// слайдер отзывов\nvar reviewsSlider = new Swiper(\".reviews__sliders\", {\n  loop: true,\n  navigation: {\n    nextEl: \".reviews-button--right\",\n    prevEl: \".reviews-button--left\",\n    clickable: true,\n  },\n  // pagination: {\n  //   el: \".swiper-pagination\",\n  //   type: \"bullets\",\n  //   clickable: true,\n  // },\n});\n//----- END\n"]}